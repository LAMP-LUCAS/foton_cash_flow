// app/views/cash_flow_entries/create.js.erb

<% if @issue.errors.any? %>
  // Substitui o conteúdo do formulário existente com o formulário re-renderizado
  // Isso assume que o formulário está dentro de um div com ID 'cash-flow-form-container'
  // ou que você está usando um modal que pode ser atualizado com o novo HTML
  document.querySelector('.cf-form-container').innerHTML = "<%= j render(partial: 'form', locals: { issue: @issue, custom_fields: @custom_fields }) %>";
  // O Rails.logger.warn é para o backend, não para o frontend.
  // A mensagem de erro será exibida via error_messages_for no partial _form.
<% else %>
  // Em caso de criação bem-sucedida, exibe o modal personalizado.
  var modalHtml = `
    <div class="custom-modal-overlay" id="issueCreatedModalOverlay">
      <div class="custom-modal-content">
        <div class="custom-modal-header">
          <h5><%= l(:title_issue_created_successfully) %></h5>
          <button type="button" class="custom-modal-close-btn">&times;</button>
        </div>
        <div class="custom-modal-body">
          <%= l(:text_issue_created_message, issue_id: @issue.id) %>
        </div>
        <div class="custom-modal-footer">
          <a href="<%= issue_path(@issue) %>" class="cf-button"><%= l(:button_view_issue) %></a>
          <button type="button" class="cf-button cf-button--secondary" id="goBackToListBtn"><%= l(:button_go_back_to_list) %></button>
        </div>
      </div>
    </div>
  `;

  // Anexar o HTML do modal ao corpo do documento
  document.body.insertAdjacentHTML('beforeend', modalHtml);

  var modalOverlay = document.getElementById('issueCreatedModalOverlay');
  var closeModalBtn = modalOverlay.querySelector('.custom-modal-close-btn');
  var goBackToListBtn = document.getElementById('goBackToListBtn');

  // Função para exibir o modal
  function showModal() {
    modalOverlay.classList.add('active');
  }

  // Função para esconder o modal e removê-lo do DOM
  function hideModal() {
    modalOverlay.classList.remove('active');
    // Espera a transição terminar antes de remover do DOM
    modalOverlay.addEventListener('transitionend', function handler() {
      if (!modalOverlay.classList.contains('active')) {
        modalOverlay.remove();
        modalOverlay.removeEventListener('transitionend', handler);
      }
    });
  }

  // Adicionar listeners para fechar/navegar
  closeModalBtn.addEventListener('click', hideModal);
  modalOverlay.addEventListener('click', function(event) {
    if (event.target === modalOverlay) { // Fecha ao clicar fora do conteúdo do modal
      hideModal();
    }
  });
  goBackToListBtn.addEventListener('click', function() {
    window.location.href = '<%= cash_flow_entries_path %>'; // Redireciona para a página de listagem
  });

  // Exibir o modal após ele ser anexado ao DOM
  showModal();
<% end %>